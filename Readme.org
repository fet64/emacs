#+TITLE: Fet64's Emacs Configuration File
#+AUTHOR: Fet64

* MacOS Keyboard Configuration
#+begin_src emacs-lisp
    (setq mac-command-modifier       'meta
	  mac-option-modifier         nil
	  mac-control-modifier       'control
	  mac-right-command-modifier 'super
	  mac-right-control-modifier 'hyper)

    (global-set-key (kbd "<escape>") 'keyboard-escape-quit)

#+end_src
* Elpaca Package Manager
Elpaca package manager
** Quick start
[[https://github.com/progfolio/elpaca]]
|------------------------------------+--------------------+--------------------------------------------------|
| Operation                          | Keys               | Commmands                                        |
|------------------------------------+--------------------+--------------------------------------------------|
| Finding packages                   | M-x elpaca-manager | elpaca-try                                       |
| Trying packages                    | i x                | elpaca-try                                       |
| Fetching package updates           | f x                | elpaca-fetch or elpaca-fetch-all                 |
| Merging updates                    | u x                | elpaca-merge or elpaca-merge-all                 |
| Pulling updates                    | Cu u x             | C-u M-x elpaca-merge or C-u M-x elpaca-merge-all |
| Rebuilding packages                | r x                | elpaca-rebuild                                   |
| Deleting packages                  | d x                | elpaca-delete                                    |
| View package logs                  | l                  | elpaca-log                                       |
| View package statuses              | t                  | elpaca-status                                    |
| Visit package repository directory | v                  | elpaca-visit                                     |
| Visit package build directory      | C-u v              | C-u M-x elpaca-visit                             |
| Browse package website             | b                  | elpaca-browse                                    |
|------------------------------------+--------------------+--------------------------------------------------|



#+begin_src emacs-lisp
  (defvar elpaca-installer-version 0.6)
  (defvar elpaca-directory (expand-file-name "elpaca/" user-emacs-directory))
  (defvar elpaca-builds-directory (expand-file-name "builds/" elpaca-directory))
  (defvar elpaca-repos-directory (expand-file-name "repos/" elpaca-directory))
  (defvar elpaca-order '(elpaca :repo "https://github.com/progfolio/elpaca.git"
				:ref nil
				:files (:defaults "elpaca-test.el" (:exclude "extensions"))
				:build (:not elpaca--activate-package)))
  (let* ((repo  (expand-file-name "elpaca/" elpaca-repos-directory))
	 (build (expand-file-name "elpaca/" elpaca-builds-directory))
	 (order (cdr elpaca-order))
	 (default-directory repo))
    (add-to-list 'load-path (if (file-exists-p build) build repo))
    (unless (file-exists-p repo)
      (make-directory repo t)
      (when (< emacs-major-version 28) (require 'subr-x))
      (condition-case-unless-debug err
	  (if-let ((buffer (pop-to-buffer-same-window "*elpaca-bootstrap*"))
		   ((zerop (call-process "git" nil buffer t "clone"
					 (plist-get order :repo) repo)))
		   ((zerop (call-process "git" nil buffer t "checkout"
					 (or (plist-get order :ref) "--"))))
		   (emacs (concat invocation-directory invocation-name))
		   ((zerop (call-process emacs nil buffer nil "-Q" "-L" "." "--batch"
					 "--eval" "(byte-recompile-directory \".\" 0 'force)")))
		   ((require 'elpaca))
		   ((elpaca-generate-autoloads "elpaca" repo)))
	      (progn (message "%s" (buffer-string)) (kill-buffer buffer))
	    (error "%s" (with-current-buffer buffer (buffer-string))))
	((error) (warn "%s" err) (delete-directory repo 'recursive))))
    (unless (require 'elpaca-autoloads nil t)
      (require 'elpaca)
      (elpaca-generate-autoloads "elpaca" repo)
      (load "./elpaca-autoloads")))
  (add-hook 'after-init-hook #'elpaca-process-queues)
  (elpaca `(,@elpaca-order))

  (elpaca elpaca-use-package
	  (elpaca-use-package-mode)
	  (setq elpaca-use-package-by-default t))

#+end_src

* Saving customizations
I don't want saved customizations in my init.el file.
Ref: [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html]]

#+begin_src emacs-lisp
  (setq custom-file "~/.config/emacs/emacs-custom.el")
  (load custom-file)

#+end_src

* Org
#+begin_src emacs-lisp
  (require 'org-tempo)
#+end_src

* Themes and visual stuff
** All the icons
[[https://github.com/domtronn/all-the-icons.el]]
#+begin_src emacs-lisp
  (use-package all-the-icons
    :ensure t
    :if (display-graphic-p))

  (use-package all-the-icons-dired
    :hook (dired-mode . (lambda () (all-the-icons-dired-mode t))))

#+end_src

** Doom theme and modeline
Doom themes: [[https://github.com/doomemacs/themes]]
Doom modeline: [[https://github.com/seagle0128/doom-modeline]]

#+begin_src emacs-lisp
  (use-package doom-themes
    :config
    (setq doom-themes-enable-bold t
	  doom-themes-enable-italic t)
    (load-theme 'doom-one t)
    ;;(doom-themes-neotree-config)
    (doom-themes-org-config))

  (use-package doom-modeline
    :ensure t
    :init
    (doom-modeline-mode 1)
    :config
    (setq doom-modeline-height 35
	  doom-modeline-bar-width 5
	  doom-modeline-persp-name t
	  doom-modeline-persp-icon t))

#+end_src
